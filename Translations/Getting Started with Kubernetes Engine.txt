Course:		Google Cloud Platform Fundamentals - Core Infrastructure

Module: 	Containers in the Cloud

Lab: 		GCP Fundamentals: Getting Started with Kubernetes Engine



Objectives

In this lab, you learn how to perform the following tasks:

-->Provision a Kubernetes cluster using Kubernetes Engine.

-->Deploy and manage Docker containers using kubectl


###The first thing to do is to login with the provided credentials given on your Qwiklab page.


Task 1: Confirm that needed APIs are enabled


	In the GCP Console, on the Navigation menu, click APIs & Services.

	Scroll down in the list of enabled APIs, and confirm that both of these APIs are enabled:

		-->Kubernetes Engine API
		-->Container Registry API
	If either API is missing, click Enable APIs and Services at the top. Search for the above APIs by name and enable each for your current project


Task 2: Start a Kubernetes Engine cluster


	In GCP console, on the top right toolbar, click the Open Cloud Shell button.
	
	Click Continue..

	For convenience, place the zone that Qwiklabs assigned you to into an environment variable called MY_ZONE. At the Cloud Shell prompt, type this partial command:

		export MY_ZONE=us-central1-a

	Start a Kubernetes cluster managed by Kubernetes Engine. Name the cluster webfrontend and configure it to run 2 nodes:

		gcloud container clusters create webfrontend --zone $MY_ZONE --num-nodes 2

	After the cluster is created, check your installed version of Kubernetes using the kubectl version command:

		kubectl version

	View your running nodes in the GCP Console. On the Navigation menu, click Compute Engine > VM Instances



Task 3: Run and deploy a container


	From your Cloud Shell prompt, launch a single instance of the nginx container. (Nginx is a popular web server.)

		kubectl create deploy nginx --image=nginx:1.17

	To View the pod running the nginx container, run the command below...

		kubectl get pods

	To Expose the nginx container to the Internet, run the command below...

		kubectl expose deployment nginx --port 80 --type LoadBalancer

	To View the new service, run the command below...

		kubectl get services

	Once you obtain the External IP address, Open a new web browser tab and paste your cluster's external IP address into the address bar. The default home page of the Nginx browser is displayed.


	Scale up the number of pods running on your service using the command below...

		kubectl scale deployment nginx --replicas 3

	Confirm that Kubernetes has updated the number of pods using the command below...

		kubectl get pods

	Confirm that your external IP address has not changed by running this command...

		kubectl get services

	Finally, Return to the web browser tab in which you viewed your cluster's external IP address. Refresh the page to confirm that the nginx web server is still responding.

## To End your lab...

	When you have completed your lab, click End Lab. Qwiklabs removes the resources youâ€™ve used and cleans the account for you.
